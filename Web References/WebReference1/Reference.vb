'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Data
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
'
Namespace WebReference1
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="InstawinWebServiceAdminSoap", [Namespace]:="http://ws.instawin.ph/")>  _
    Partial Public Class InstawinWebServiceAdmin
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        Private GetServerDateTimeOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetRemoteIPAddressOperationCompleted As System.Threading.SendOrPostCallback
        
        Private TOOL_GenerateMD5StringOperationCompleted As System.Threading.SendOrPostCallback
        
        Private TOOL_3DESEncryptStringOperationCompleted As System.Threading.SendOrPostCallback
        
        Private TOOL_3DESDecryptStringOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InsertComBannedCriteriaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InsertCountryInfoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InsertComExclusionOrdersOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InsertComGenericCodesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InsertComGenericTypesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InsertComUserAccessListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InsertComUserIPAddressOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InsertComBranchProfileOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InsertComEmployeeInformationOperationCompleted As System.Threading.SendOrPostCallback
        
        Private UpdateComEmployeeInformationOperationCompleted As System.Threading.SendOrPostCallback
        
        Private UpdateUserAccessStatusOperationCompleted As System.Threading.SendOrPostCallback
        
        Private UpdateGenericCodesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private UpdateUserAccessCodeOperationCompleted As System.Threading.SendOrPostCallback
        
        Private UpdateUserForgotAccessOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InsertUserModuleLevelOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetUserIPAddressListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetApplicationUsersOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetUserModuleLevelListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetUserPriviledgeListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetBranchListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetBranchParentChildOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetExclusionListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetBannedListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetCountryListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetCountryTelephoneCodesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetCountryNationalityListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetBillingViewedGuestPerBranchOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetBillingViewedGuestPerUserOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetBillingRatesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InsertComBillingRatesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetApplicationNoticesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InsertComApplicationNoticeOperationCompleted As System.Threading.SendOrPostCallback
        
        Private TOOL_ApplicationMailerOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetBranchList_BCFOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetTerminalList_By_BranchOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetTerminalList_DetailOperationCompleted As System.Threading.SendOrPostCallback
        
        Private UpdateApplicationUsersStatusOperationCompleted As System.Threading.SendOrPostCallback
        
        Private UpdateBranchProfileStatusOperationCompleted As System.Threading.SendOrPostCallback
        
        Private UpdateBranchTerminalsStatusOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InsertBranchTerminalsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetBranchList_BVLOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetRPTLoginHistoryOperationCompleted As System.Threading.SendOrPostCallback
        
        Private useDefaultCredentialsSetExplicitly As Boolean
        
        '''<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = Global.fastwin_lucky_games.My.MySettings.Default.fastwin_lucky_games_WebReference1_InstawinWebServiceAdmin
            If (Me.IsLocalFileSystemWebService(Me.Url) = true) Then
                Me.UseDefaultCredentials = true
                Me.useDefaultCredentialsSetExplicitly = false
            Else
                Me.useDefaultCredentialsSetExplicitly = true
            End If
        End Sub
        
        Public Shadows Property Url() As String
            Get
                Return MyBase.Url
            End Get
            Set
                If (((Me.IsLocalFileSystemWebService(MyBase.Url) = true)  _
                            AndAlso (Me.useDefaultCredentialsSetExplicitly = false))  _
                            AndAlso (Me.IsLocalFileSystemWebService(value) = false)) Then
                    MyBase.UseDefaultCredentials = false
                End If
                MyBase.Url = value
            End Set
        End Property
        
        Public Shadows Property UseDefaultCredentials() As Boolean
            Get
                Return MyBase.UseDefaultCredentials
            End Get
            Set
                MyBase.UseDefaultCredentials = value
                Me.useDefaultCredentialsSetExplicitly = true
            End Set
        End Property
        
        '''<remarks/>
        Public Event GetServerDateTimeCompleted As GetServerDateTimeCompletedEventHandler
        
        '''<remarks/>
        Public Event GetRemoteIPAddressCompleted As GetRemoteIPAddressCompletedEventHandler
        
        '''<remarks/>
        Public Event TOOL_GenerateMD5StringCompleted As TOOL_GenerateMD5StringCompletedEventHandler
        
        '''<remarks/>
        Public Event TOOL_3DESEncryptStringCompleted As TOOL_3DESEncryptStringCompletedEventHandler
        
        '''<remarks/>
        Public Event TOOL_3DESDecryptStringCompleted As TOOL_3DESDecryptStringCompletedEventHandler
        
        '''<remarks/>
        Public Event InsertComBannedCriteriaCompleted As InsertComBannedCriteriaCompletedEventHandler
        
        '''<remarks/>
        Public Event InsertCountryInfoCompleted As InsertCountryInfoCompletedEventHandler
        
        '''<remarks/>
        Public Event InsertComExclusionOrdersCompleted As InsertComExclusionOrdersCompletedEventHandler
        
        '''<remarks/>
        Public Event InsertComGenericCodesCompleted As InsertComGenericCodesCompletedEventHandler
        
        '''<remarks/>
        Public Event InsertComGenericTypesCompleted As InsertComGenericTypesCompletedEventHandler
        
        '''<remarks/>
        Public Event InsertComUserAccessListCompleted As InsertComUserAccessListCompletedEventHandler
        
        '''<remarks/>
        Public Event InsertComUserIPAddressCompleted As InsertComUserIPAddressCompletedEventHandler
        
        '''<remarks/>
        Public Event InsertComBranchProfileCompleted As InsertComBranchProfileCompletedEventHandler
        
        '''<remarks/>
        Public Event InsertComEmployeeInformationCompleted As InsertComEmployeeInformationCompletedEventHandler
        
        '''<remarks/>
        Public Event UpdateComEmployeeInformationCompleted As UpdateComEmployeeInformationCompletedEventHandler
        
        '''<remarks/>
        Public Event UpdateUserAccessStatusCompleted As UpdateUserAccessStatusCompletedEventHandler
        
        '''<remarks/>
        Public Event UpdateGenericCodesCompleted As UpdateGenericCodesCompletedEventHandler
        
        '''<remarks/>
        Public Event UpdateUserAccessCodeCompleted As UpdateUserAccessCodeCompletedEventHandler
        
        '''<remarks/>
        Public Event UpdateUserForgotAccessCompleted As UpdateUserForgotAccessCompletedEventHandler
        
        '''<remarks/>
        Public Event InsertUserModuleLevelCompleted As InsertUserModuleLevelCompletedEventHandler
        
        '''<remarks/>
        Public Event GetUserIPAddressListCompleted As GetUserIPAddressListCompletedEventHandler
        
        '''<remarks/>
        Public Event GetApplicationUsersCompleted As GetApplicationUsersCompletedEventHandler
        
        '''<remarks/>
        Public Event GetUserModuleLevelListCompleted As GetUserModuleLevelListCompletedEventHandler
        
        '''<remarks/>
        Public Event GetUserPriviledgeListCompleted As GetUserPriviledgeListCompletedEventHandler
        
        '''<remarks/>
        Public Event GetBranchListCompleted As GetBranchListCompletedEventHandler
        
        '''<remarks/>
        Public Event GetBranchParentChildCompleted As GetBranchParentChildCompletedEventHandler
        
        '''<remarks/>
        Public Event GetExclusionListCompleted As GetExclusionListCompletedEventHandler
        
        '''<remarks/>
        Public Event GetBannedListCompleted As GetBannedListCompletedEventHandler
        
        '''<remarks/>
        Public Event GetCountryListCompleted As GetCountryListCompletedEventHandler
        
        '''<remarks/>
        Public Event GetCountryTelephoneCodesCompleted As GetCountryTelephoneCodesCompletedEventHandler
        
        '''<remarks/>
        Public Event GetCountryNationalityListCompleted As GetCountryNationalityListCompletedEventHandler
        
        '''<remarks/>
        Public Event GetBillingViewedGuestPerBranchCompleted As GetBillingViewedGuestPerBranchCompletedEventHandler
        
        '''<remarks/>
        Public Event GetBillingViewedGuestPerUserCompleted As GetBillingViewedGuestPerUserCompletedEventHandler
        
        '''<remarks/>
        Public Event GetBillingRatesCompleted As GetBillingRatesCompletedEventHandler
        
        '''<remarks/>
        Public Event InsertComBillingRatesCompleted As InsertComBillingRatesCompletedEventHandler
        
        '''<remarks/>
        Public Event GetApplicationNoticesCompleted As GetApplicationNoticesCompletedEventHandler
        
        '''<remarks/>
        Public Event InsertComApplicationNoticeCompleted As InsertComApplicationNoticeCompletedEventHandler
        
        '''<remarks/>
        Public Event TOOL_ApplicationMailerCompleted As TOOL_ApplicationMailerCompletedEventHandler
        
        '''<remarks/>
        Public Event GetBranchList_BCFCompleted As GetBranchList_BCFCompletedEventHandler
        
        '''<remarks/>
        Public Event GetTerminalList_By_BranchCompleted As GetTerminalList_By_BranchCompletedEventHandler
        
        '''<remarks/>
        Public Event GetTerminalList_DetailCompleted As GetTerminalList_DetailCompletedEventHandler
        
        '''<remarks/>
        Public Event UpdateApplicationUsersStatusCompleted As UpdateApplicationUsersStatusCompletedEventHandler
        
        '''<remarks/>
        Public Event UpdateBranchProfileStatusCompleted As UpdateBranchProfileStatusCompletedEventHandler
        
        '''<remarks/>
        Public Event UpdateBranchTerminalsStatusCompleted As UpdateBranchTerminalsStatusCompletedEventHandler
        
        '''<remarks/>
        Public Event InsertBranchTerminalsCompleted As InsertBranchTerminalsCompletedEventHandler
        
        '''<remarks/>
        Public Event GetBranchList_BVLCompleted As GetBranchList_BVLCompletedEventHandler
        
        '''<remarks/>
        Public Event GetRPTLoginHistoryCompleted As GetRPTLoginHistoryCompletedEventHandler
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ws.instawin.ph/GetServerDateTime", RequestNamespace:="http://ws.instawin.ph/", ResponseNamespace:="http://ws.instawin.ph/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetServerDateTime() As Date
            Dim results() As Object = Me.Invoke("GetServerDateTime", New Object(-1) {})
            Return CType(results(0),Date)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetServerDateTimeAsync()
            Me.GetServerDateTimeAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetServerDateTimeAsync(ByVal userState As Object)
            If (Me.GetServerDateTimeOperationCompleted Is Nothing) Then
                Me.GetServerDateTimeOperationCompleted = AddressOf Me.OnGetServerDateTimeOperationCompleted
            End If
            Me.InvokeAsync("GetServerDateTime", New Object(-1) {}, Me.GetServerDateTimeOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetServerDateTimeOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetServerDateTimeCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetServerDateTimeCompleted(Me, New GetServerDateTimeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ws.instawin.ph/GetRemoteIPAddress", RequestNamespace:="http://ws.instawin.ph/", ResponseNamespace:="http://ws.instawin.ph/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetRemoteIPAddress() As String
            Dim results() As Object = Me.Invoke("GetRemoteIPAddress", New Object(-1) {})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetRemoteIPAddressAsync()
            Me.GetRemoteIPAddressAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetRemoteIPAddressAsync(ByVal userState As Object)
            If (Me.GetRemoteIPAddressOperationCompleted Is Nothing) Then
                Me.GetRemoteIPAddressOperationCompleted = AddressOf Me.OnGetRemoteIPAddressOperationCompleted
            End If
            Me.InvokeAsync("GetRemoteIPAddress", New Object(-1) {}, Me.GetRemoteIPAddressOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetRemoteIPAddressOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetRemoteIPAddressCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetRemoteIPAddressCompleted(Me, New GetRemoteIPAddressCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ws.instawin.ph/TOOL_GenerateMD5String", RequestNamespace:="http://ws.instawin.ph/", ResponseNamespace:="http://ws.instawin.ph/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function TOOL_GenerateMD5String(ByVal StringToEncrpt As String) As String
            Dim results() As Object = Me.Invoke("TOOL_GenerateMD5String", New Object() {StringToEncrpt})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub TOOL_GenerateMD5StringAsync(ByVal StringToEncrpt As String)
            Me.TOOL_GenerateMD5StringAsync(StringToEncrpt, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub TOOL_GenerateMD5StringAsync(ByVal StringToEncrpt As String, ByVal userState As Object)
            If (Me.TOOL_GenerateMD5StringOperationCompleted Is Nothing) Then
                Me.TOOL_GenerateMD5StringOperationCompleted = AddressOf Me.OnTOOL_GenerateMD5StringOperationCompleted
            End If
            Me.InvokeAsync("TOOL_GenerateMD5String", New Object() {StringToEncrpt}, Me.TOOL_GenerateMD5StringOperationCompleted, userState)
        End Sub
        
        Private Sub OnTOOL_GenerateMD5StringOperationCompleted(ByVal arg As Object)
            If (Not (Me.TOOL_GenerateMD5StringCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent TOOL_GenerateMD5StringCompleted(Me, New TOOL_GenerateMD5StringCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ws.instawin.ph/TOOL_3DESEncryptString", RequestNamespace:="http://ws.instawin.ph/", ResponseNamespace:="http://ws.instawin.ph/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function TOOL_3DESEncryptString(ByVal StringToEncrypt As String, ByVal HashCode As String) As String
            Dim results() As Object = Me.Invoke("TOOL_3DESEncryptString", New Object() {StringToEncrypt, HashCode})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub TOOL_3DESEncryptStringAsync(ByVal StringToEncrypt As String, ByVal HashCode As String)
            Me.TOOL_3DESEncryptStringAsync(StringToEncrypt, HashCode, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub TOOL_3DESEncryptStringAsync(ByVal StringToEncrypt As String, ByVal HashCode As String, ByVal userState As Object)
            If (Me.TOOL_3DESEncryptStringOperationCompleted Is Nothing) Then
                Me.TOOL_3DESEncryptStringOperationCompleted = AddressOf Me.OnTOOL_3DESEncryptStringOperationCompleted
            End If
            Me.InvokeAsync("TOOL_3DESEncryptString", New Object() {StringToEncrypt, HashCode}, Me.TOOL_3DESEncryptStringOperationCompleted, userState)
        End Sub
        
        Private Sub OnTOOL_3DESEncryptStringOperationCompleted(ByVal arg As Object)
            If (Not (Me.TOOL_3DESEncryptStringCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent TOOL_3DESEncryptStringCompleted(Me, New TOOL_3DESEncryptStringCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ws.instawin.ph/TOOL_3DESDecryptString", RequestNamespace:="http://ws.instawin.ph/", ResponseNamespace:="http://ws.instawin.ph/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function TOOL_3DESDecryptString(ByVal EncryptedString As String, ByVal HashCode As String) As String
            Dim results() As Object = Me.Invoke("TOOL_3DESDecryptString", New Object() {EncryptedString, HashCode})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub TOOL_3DESDecryptStringAsync(ByVal EncryptedString As String, ByVal HashCode As String)
            Me.TOOL_3DESDecryptStringAsync(EncryptedString, HashCode, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub TOOL_3DESDecryptStringAsync(ByVal EncryptedString As String, ByVal HashCode As String, ByVal userState As Object)
            If (Me.TOOL_3DESDecryptStringOperationCompleted Is Nothing) Then
                Me.TOOL_3DESDecryptStringOperationCompleted = AddressOf Me.OnTOOL_3DESDecryptStringOperationCompleted
            End If
            Me.InvokeAsync("TOOL_3DESDecryptString", New Object() {EncryptedString, HashCode}, Me.TOOL_3DESDecryptStringOperationCompleted, userState)
        End Sub
        
        Private Sub OnTOOL_3DESDecryptStringOperationCompleted(ByVal arg As Object)
            If (Not (Me.TOOL_3DESDecryptStringCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent TOOL_3DESDecryptStringCompleted(Me, New TOOL_3DESDecryptStringCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ws.instawin.ph/InsertComBannedCriteria", RequestNamespace:="http://ws.instawin.ph/", ResponseNamespace:="http://ws.instawin.ph/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InsertComBannedCriteria(ByVal BannedIdx As Integer, ByVal BannedCode As String, ByVal BannedName As String, ByVal BannedDescription As String, ByVal BannedClass As String, ByVal Username As String, ByVal ClientKey As String) As Integer
            Dim results() As Object = Me.Invoke("InsertComBannedCriteria", New Object() {BannedIdx, BannedCode, BannedName, BannedDescription, BannedClass, Username, ClientKey})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InsertComBannedCriteriaAsync(ByVal BannedIdx As Integer, ByVal BannedCode As String, ByVal BannedName As String, ByVal BannedDescription As String, ByVal BannedClass As String, ByVal Username As String, ByVal ClientKey As String)
            Me.InsertComBannedCriteriaAsync(BannedIdx, BannedCode, BannedName, BannedDescription, BannedClass, Username, ClientKey, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InsertComBannedCriteriaAsync(ByVal BannedIdx As Integer, ByVal BannedCode As String, ByVal BannedName As String, ByVal BannedDescription As String, ByVal BannedClass As String, ByVal Username As String, ByVal ClientKey As String, ByVal userState As Object)
            If (Me.InsertComBannedCriteriaOperationCompleted Is Nothing) Then
                Me.InsertComBannedCriteriaOperationCompleted = AddressOf Me.OnInsertComBannedCriteriaOperationCompleted
            End If
            Me.InvokeAsync("InsertComBannedCriteria", New Object() {BannedIdx, BannedCode, BannedName, BannedDescription, BannedClass, Username, ClientKey}, Me.InsertComBannedCriteriaOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertComBannedCriteriaOperationCompleted(ByVal arg As Object)
            If (Not (Me.InsertComBannedCriteriaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InsertComBannedCriteriaCompleted(Me, New InsertComBannedCriteriaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ws.instawin.ph/InsertCountryInfo", RequestNamespace:="http://ws.instawin.ph/", ResponseNamespace:="http://ws.instawin.ph/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InsertCountryInfo(ByVal CountryIdx As Integer, ByVal CountryName As String, ByVal CountryCode As String, ByVal TelephoneCode As String, ByVal CurrencyCode As String, ByVal Nationality As String, ByVal CreatedByUserIdx As Integer, ByVal ClientKey As String) As Integer
            Dim results() As Object = Me.Invoke("InsertCountryInfo", New Object() {CountryIdx, CountryName, CountryCode, TelephoneCode, CurrencyCode, Nationality, CreatedByUserIdx, ClientKey})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InsertCountryInfoAsync(ByVal CountryIdx As Integer, ByVal CountryName As String, ByVal CountryCode As String, ByVal TelephoneCode As String, ByVal CurrencyCode As String, ByVal Nationality As String, ByVal CreatedByUserIdx As Integer, ByVal ClientKey As String)
            Me.InsertCountryInfoAsync(CountryIdx, CountryName, CountryCode, TelephoneCode, CurrencyCode, Nationality, CreatedByUserIdx, ClientKey, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InsertCountryInfoAsync(ByVal CountryIdx As Integer, ByVal CountryName As String, ByVal CountryCode As String, ByVal TelephoneCode As String, ByVal CurrencyCode As String, ByVal Nationality As String, ByVal CreatedByUserIdx As Integer, ByVal ClientKey As String, ByVal userState As Object)
            If (Me.InsertCountryInfoOperationCompleted Is Nothing) Then
                Me.InsertCountryInfoOperationCompleted = AddressOf Me.OnInsertCountryInfoOperationCompleted
            End If
            Me.InvokeAsync("InsertCountryInfo", New Object() {CountryIdx, CountryName, CountryCode, TelephoneCode, CurrencyCode, Nationality, CreatedByUserIdx, ClientKey}, Me.InsertCountryInfoOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertCountryInfoOperationCompleted(ByVal arg As Object)
            If (Not (Me.InsertCountryInfoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InsertCountryInfoCompleted(Me, New InsertCountryInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ws.instawin.ph/InsertComExclusionOrders", RequestNamespace:="http://ws.instawin.ph/", ResponseNamespace:="http://ws.instawin.ph/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InsertComExclusionOrders(ByVal ExclusionIdx As Integer, ByVal ExclusionCode As String, ByVal ExclusionDesc As String, ByVal ValidityPeriod As Integer, ByVal Username As String, ByVal ClientKey As String) As Integer
            Dim results() As Object = Me.Invoke("InsertComExclusionOrders", New Object() {ExclusionIdx, ExclusionCode, ExclusionDesc, ValidityPeriod, Username, ClientKey})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InsertComExclusionOrdersAsync(ByVal ExclusionIdx As Integer, ByVal ExclusionCode As String, ByVal ExclusionDesc As String, ByVal ValidityPeriod As Integer, ByVal Username As String, ByVal ClientKey As String)
            Me.InsertComExclusionOrdersAsync(ExclusionIdx, ExclusionCode, ExclusionDesc, ValidityPeriod, Username, ClientKey, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InsertComExclusionOrdersAsync(ByVal ExclusionIdx As Integer, ByVal ExclusionCode As String, ByVal ExclusionDesc As String, ByVal ValidityPeriod As Integer, ByVal Username As String, ByVal ClientKey As String, ByVal userState As Object)
            If (Me.InsertComExclusionOrdersOperationCompleted Is Nothing) Then
                Me.InsertComExclusionOrdersOperationCompleted = AddressOf Me.OnInsertComExclusionOrdersOperationCompleted
            End If
            Me.InvokeAsync("InsertComExclusionOrders", New Object() {ExclusionIdx, ExclusionCode, ExclusionDesc, ValidityPeriod, Username, ClientKey}, Me.InsertComExclusionOrdersOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertComExclusionOrdersOperationCompleted(ByVal arg As Object)
            If (Not (Me.InsertComExclusionOrdersCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InsertComExclusionOrdersCompleted(Me, New InsertComExclusionOrdersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ws.instawin.ph/InsertComGenericCodes", RequestNamespace:="http://ws.instawin.ph/", ResponseNamespace:="http://ws.instawin.ph/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InsertComGenericCodes(ByVal GenericIdx As Integer, ByVal GenericTypeIdx As Integer, ByVal GenericName As String, ByVal GenericCode As String, ByVal GenericNumber As Integer, ByVal SortNumber As Integer, ByVal Username As String, ByVal ClientKey As String) As Integer
            Dim results() As Object = Me.Invoke("InsertComGenericCodes", New Object() {GenericIdx, GenericTypeIdx, GenericName, GenericCode, GenericNumber, SortNumber, Username, ClientKey})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InsertComGenericCodesAsync(ByVal GenericIdx As Integer, ByVal GenericTypeIdx As Integer, ByVal GenericName As String, ByVal GenericCode As String, ByVal GenericNumber As Integer, ByVal SortNumber As Integer, ByVal Username As String, ByVal ClientKey As String)
            Me.InsertComGenericCodesAsync(GenericIdx, GenericTypeIdx, GenericName, GenericCode, GenericNumber, SortNumber, Username, ClientKey, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InsertComGenericCodesAsync(ByVal GenericIdx As Integer, ByVal GenericTypeIdx As Integer, ByVal GenericName As String, ByVal GenericCode As String, ByVal GenericNumber As Integer, ByVal SortNumber As Integer, ByVal Username As String, ByVal ClientKey As String, ByVal userState As Object)
            If (Me.InsertComGenericCodesOperationCompleted Is Nothing) Then
                Me.InsertComGenericCodesOperationCompleted = AddressOf Me.OnInsertComGenericCodesOperationCompleted
            End If
            Me.InvokeAsync("InsertComGenericCodes", New Object() {GenericIdx, GenericTypeIdx, GenericName, GenericCode, GenericNumber, SortNumber, Username, ClientKey}, Me.InsertComGenericCodesOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertComGenericCodesOperationCompleted(ByVal arg As Object)
            If (Not (Me.InsertComGenericCodesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InsertComGenericCodesCompleted(Me, New InsertComGenericCodesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ws.instawin.ph/InsertComGenericTypes", RequestNamespace:="http://ws.instawin.ph/", ResponseNamespace:="http://ws.instawin.ph/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InsertComGenericTypes(ByVal GenericTypeIdx As Integer, ByVal GenericTypeName As String, ByVal GenericTypeInfo As String, ByVal Username As String, ByVal ClientKey As String) As Integer
            Dim results() As Object = Me.Invoke("InsertComGenericTypes", New Object() {GenericTypeIdx, GenericTypeName, GenericTypeInfo, Username, ClientKey})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InsertComGenericTypesAsync(ByVal GenericTypeIdx As Integer, ByVal GenericTypeName As String, ByVal GenericTypeInfo As String, ByVal Username As String, ByVal ClientKey As String)
            Me.InsertComGenericTypesAsync(GenericTypeIdx, GenericTypeName, GenericTypeInfo, Username, ClientKey, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InsertComGenericTypesAsync(ByVal GenericTypeIdx As Integer, ByVal GenericTypeName As String, ByVal GenericTypeInfo As String, ByVal Username As String, ByVal ClientKey As String, ByVal userState As Object)
            If (Me.InsertComGenericTypesOperationCompleted Is Nothing) Then
                Me.InsertComGenericTypesOperationCompleted = AddressOf Me.OnInsertComGenericTypesOperationCompleted
            End If
            Me.InvokeAsync("InsertComGenericTypes", New Object() {GenericTypeIdx, GenericTypeName, GenericTypeInfo, Username, ClientKey}, Me.InsertComGenericTypesOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertComGenericTypesOperationCompleted(ByVal arg As Object)
            If (Not (Me.InsertComGenericTypesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InsertComGenericTypesCompleted(Me, New InsertComGenericTypesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ws.instawin.ph/InsertComUserAccessList", RequestNamespace:="http://ws.instawin.ph/", ResponseNamespace:="http://ws.instawin.ph/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InsertComUserAccessList(ByVal Username As String, ByVal UserLevel As Integer, ByVal CreatedByUserName As String, ByVal ClientKey As String) As Integer
            Dim results() As Object = Me.Invoke("InsertComUserAccessList", New Object() {Username, UserLevel, CreatedByUserName, ClientKey})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InsertComUserAccessListAsync(ByVal Username As String, ByVal UserLevel As Integer, ByVal CreatedByUserName As String, ByVal ClientKey As String)
            Me.InsertComUserAccessListAsync(Username, UserLevel, CreatedByUserName, ClientKey, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InsertComUserAccessListAsync(ByVal Username As String, ByVal UserLevel As Integer, ByVal CreatedByUserName As String, ByVal ClientKey As String, ByVal userState As Object)
            If (Me.InsertComUserAccessListOperationCompleted Is Nothing) Then
                Me.InsertComUserAccessListOperationCompleted = AddressOf Me.OnInsertComUserAccessListOperationCompleted
            End If
            Me.InvokeAsync("InsertComUserAccessList", New Object() {Username, UserLevel, CreatedByUserName, ClientKey}, Me.InsertComUserAccessListOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertComUserAccessListOperationCompleted(ByVal arg As Object)
            If (Not (Me.InsertComUserAccessListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InsertComUserAccessListCompleted(Me, New InsertComUserAccessListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ws.instawin.ph/InsertComUserIPAddress", RequestNamespace:="http://ws.instawin.ph/", ResponseNamespace:="http://ws.instawin.ph/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InsertComUserIPAddress(ByVal Username As String, ByVal IPAddress As String, ByVal CreatedByUserName As String, ByVal ClientKey As String) As Integer
            Dim results() As Object = Me.Invoke("InsertComUserIPAddress", New Object() {Username, IPAddress, CreatedByUserName, ClientKey})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InsertComUserIPAddressAsync(ByVal Username As String, ByVal IPAddress As String, ByVal CreatedByUserName As String, ByVal ClientKey As String)
            Me.InsertComUserIPAddressAsync(Username, IPAddress, CreatedByUserName, ClientKey, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InsertComUserIPAddressAsync(ByVal Username As String, ByVal IPAddress As String, ByVal CreatedByUserName As String, ByVal ClientKey As String, ByVal userState As Object)
            If (Me.InsertComUserIPAddressOperationCompleted Is Nothing) Then
                Me.InsertComUserIPAddressOperationCompleted = AddressOf Me.OnInsertComUserIPAddressOperationCompleted
            End If
            Me.InvokeAsync("InsertComUserIPAddress", New Object() {Username, IPAddress, CreatedByUserName, ClientKey}, Me.InsertComUserIPAddressOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertComUserIPAddressOperationCompleted(ByVal arg As Object)
            If (Not (Me.InsertComUserIPAddressCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InsertComUserIPAddressCompleted(Me, New InsertComUserIPAddressCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ws.instawin.ph/InsertComBranchProfile", RequestNamespace:="http://ws.instawin.ph/", ResponseNamespace:="http://ws.instawin.ph/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InsertComBranchProfile( _
                    ByVal BranchIdx As Integer,  _
                    ByVal BranchName As String,  _
                    ByVal BranchLocation As String,  _
                    ByVal BranchCode As String,  _
                    ByVal BranchNumber As String,  _
                    ByVal IsLicensee As Boolean,  _
                    ByVal IsActive As Boolean,  _
                    ByVal IsParent As Boolean,  _
                    ByVal BillingRateIdx As Integer,  _
                    ByVal ChildBranchIdx As Integer,  _
                    ByVal AllowGlobalSearch As Boolean,  _
                    ByVal CreatedByUsername As String,  _
                    ByVal BranchLogoFilename As String,  _
                    ByVal BranchLatitude As String,  _
                    ByVal BranchLongitude As String,  _
                    ByVal ClientKey As String) As Integer
            Dim results() As Object = Me.Invoke("InsertComBranchProfile", New Object() {BranchIdx, BranchName, BranchLocation, BranchCode, BranchNumber, IsLicensee, IsActive, IsParent, BillingRateIdx, ChildBranchIdx, AllowGlobalSearch, CreatedByUsername, BranchLogoFilename, BranchLatitude, BranchLongitude, ClientKey})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InsertComBranchProfileAsync( _
                    ByVal BranchIdx As Integer,  _
                    ByVal BranchName As String,  _
                    ByVal BranchLocation As String,  _
                    ByVal BranchCode As String,  _
                    ByVal BranchNumber As String,  _
                    ByVal IsLicensee As Boolean,  _
                    ByVal IsActive As Boolean,  _
                    ByVal IsParent As Boolean,  _
                    ByVal BillingRateIdx As Integer,  _
                    ByVal ChildBranchIdx As Integer,  _
                    ByVal AllowGlobalSearch As Boolean,  _
                    ByVal CreatedByUsername As String,  _
                    ByVal BranchLogoFilename As String,  _
                    ByVal BranchLatitude As String,  _
                    ByVal BranchLongitude As String,  _
                    ByVal ClientKey As String)
            Me.InsertComBranchProfileAsync(BranchIdx, BranchName, BranchLocation, BranchCode, BranchNumber, IsLicensee, IsActive, IsParent, BillingRateIdx, ChildBranchIdx, AllowGlobalSearch, CreatedByUsername, BranchLogoFilename, BranchLatitude, BranchLongitude, ClientKey, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InsertComBranchProfileAsync( _
                    ByVal BranchIdx As Integer,  _
                    ByVal BranchName As String,  _
                    ByVal BranchLocation As String,  _
                    ByVal BranchCode As String,  _
                    ByVal BranchNumber As String,  _
                    ByVal IsLicensee As Boolean,  _
                    ByVal IsActive As Boolean,  _
                    ByVal IsParent As Boolean,  _
                    ByVal BillingRateIdx As Integer,  _
                    ByVal ChildBranchIdx As Integer,  _
                    ByVal AllowGlobalSearch As Boolean,  _
                    ByVal CreatedByUsername As String,  _
                    ByVal BranchLogoFilename As String,  _
                    ByVal BranchLatitude As String,  _
                    ByVal BranchLongitude As String,  _
                    ByVal ClientKey As String,  _
                    ByVal userState As Object)
            If (Me.InsertComBranchProfileOperationCompleted Is Nothing) Then
                Me.InsertComBranchProfileOperationCompleted = AddressOf Me.OnInsertComBranchProfileOperationCompleted
            End If
            Me.InvokeAsync("InsertComBranchProfile", New Object() {BranchIdx, BranchName, BranchLocation, BranchCode, BranchNumber, IsLicensee, IsActive, IsParent, BillingRateIdx, ChildBranchIdx, AllowGlobalSearch, CreatedByUsername, BranchLogoFilename, BranchLatitude, BranchLongitude, ClientKey}, Me.InsertComBranchProfileOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertComBranchProfileOperationCompleted(ByVal arg As Object)
            If (Not (Me.InsertComBranchProfileCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InsertComBranchProfileCompleted(Me, New InsertComBranchProfileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ws.instawin.ph/InsertComEmployeeInformation", RequestNamespace:="http://ws.instawin.ph/", ResponseNamespace:="http://ws.instawin.ph/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InsertComEmployeeInformation(ByVal BranchCode As String, ByVal EmployeeID As String, ByVal FirstName As String, ByVal MiddleName As String, ByVal LastName As String, ByVal EmailAddress As String, <System.Xml.Serialization.XmlElementAttribute(DataType:="base64Binary")> ByVal EmpPhoto() As Byte, ByVal Username As String, ByVal PassHash As String, ByVal IPAddress As String, ByVal CreatedByUserName As String, ByVal ClientKey As String) As Integer
            Dim results() As Object = Me.Invoke("InsertComEmployeeInformation", New Object() {BranchCode, EmployeeID, FirstName, MiddleName, LastName, EmailAddress, EmpPhoto, Username, PassHash, IPAddress, CreatedByUserName, ClientKey})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InsertComEmployeeInformationAsync(ByVal BranchCode As String, ByVal EmployeeID As String, ByVal FirstName As String, ByVal MiddleName As String, ByVal LastName As String, ByVal EmailAddress As String, ByVal EmpPhoto() As Byte, ByVal Username As String, ByVal PassHash As String, ByVal IPAddress As String, ByVal CreatedByUserName As String, ByVal ClientKey As String)
            Me.InsertComEmployeeInformationAsync(BranchCode, EmployeeID, FirstName, MiddleName, LastName, EmailAddress, EmpPhoto, Username, PassHash, IPAddress, CreatedByUserName, ClientKey, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InsertComEmployeeInformationAsync(ByVal BranchCode As String, ByVal EmployeeID As String, ByVal FirstName As String, ByVal MiddleName As String, ByVal LastName As String, ByVal EmailAddress As String, ByVal EmpPhoto() As Byte, ByVal Username As String, ByVal PassHash As String, ByVal IPAddress As String, ByVal CreatedByUserName As String, ByVal ClientKey As String, ByVal userState As Object)
            If (Me.InsertComEmployeeInformationOperationCompleted Is Nothing) Then
                Me.InsertComEmployeeInformationOperationCompleted = AddressOf Me.OnInsertComEmployeeInformationOperationCompleted
            End If
            Me.InvokeAsync("InsertComEmployeeInformation", New Object() {BranchCode, EmployeeID, FirstName, MiddleName, LastName, EmailAddress, EmpPhoto, Username, PassHash, IPAddress, CreatedByUserName, ClientKey}, Me.InsertComEmployeeInformationOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertComEmployeeInformationOperationCompleted(ByVal arg As Object)
            If (Not (Me.InsertComEmployeeInformationCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InsertComEmployeeInformationCompleted(Me, New InsertComEmployeeInformationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ws.instawin.ph/UpdateComEmployeeInformation", RequestNamespace:="http://ws.instawin.ph/", ResponseNamespace:="http://ws.instawin.ph/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function UpdateComEmployeeInformation(ByVal BranchCode As String, ByVal EmployeeID As String, ByVal FirstName As String, ByVal MiddleName As String, ByVal LastName As String, ByVal EmailAddress As String, <System.Xml.Serialization.XmlElementAttribute(DataType:="base64Binary")> ByVal EmpPhoto() As Byte, ByVal AccessLevel As Integer, ByVal CreatedByUserName As String, ByVal ClientKey As String) As Integer
            Dim results() As Object = Me.Invoke("UpdateComEmployeeInformation", New Object() {BranchCode, EmployeeID, FirstName, MiddleName, LastName, EmailAddress, EmpPhoto, AccessLevel, CreatedByUserName, ClientKey})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub UpdateComEmployeeInformationAsync(ByVal BranchCode As String, ByVal EmployeeID As String, ByVal FirstName As String, ByVal MiddleName As String, ByVal LastName As String, ByVal EmailAddress As String, ByVal EmpPhoto() As Byte, ByVal AccessLevel As Integer, ByVal CreatedByUserName As String, ByVal ClientKey As String)
            Me.UpdateComEmployeeInformationAsync(BranchCode, EmployeeID, FirstName, MiddleName, LastName, EmailAddress, EmpPhoto, AccessLevel, CreatedByUserName, ClientKey, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UpdateComEmployeeInformationAsync(ByVal BranchCode As String, ByVal EmployeeID As String, ByVal FirstName As String, ByVal MiddleName As String, ByVal LastName As String, ByVal EmailAddress As String, ByVal EmpPhoto() As Byte, ByVal AccessLevel As Integer, ByVal CreatedByUserName As String, ByVal ClientKey As String, ByVal userState As Object)
            If (Me.UpdateComEmployeeInformationOperationCompleted Is Nothing) Then
                Me.UpdateComEmployeeInformationOperationCompleted = AddressOf Me.OnUpdateComEmployeeInformationOperationCompleted
            End If
            Me.InvokeAsync("UpdateComEmployeeInformation", New Object() {BranchCode, EmployeeID, FirstName, MiddleName, LastName, EmailAddress, EmpPhoto, AccessLevel, CreatedByUserName, ClientKey}, Me.UpdateComEmployeeInformationOperationCompleted, userState)
        End Sub
        
        Private Sub OnUpdateComEmployeeInformationOperationCompleted(ByVal arg As Object)
            If (Not (Me.UpdateComEmployeeInformationCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent UpdateComEmployeeInformationCompleted(Me, New UpdateComEmployeeInformationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ws.instawin.ph/UpdateUserAccessStatus", RequestNamespace:="http://ws.instawin.ph/", ResponseNamespace:="http://ws.instawin.ph/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function UpdateUserAccessStatus(ByVal Username As String, ByVal SetAccountStatusTo As Boolean, ByVal PerformedByUsername As String, ByVal ClientKey As String) As Integer
            Dim results() As Object = Me.Invoke("UpdateUserAccessStatus", New Object() {Username, SetAccountStatusTo, PerformedByUsername, ClientKey})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub UpdateUserAccessStatusAsync(ByVal Username As String, ByVal SetAccountStatusTo As Boolean, ByVal PerformedByUsername As String, ByVal ClientKey As String)
            Me.UpdateUserAccessStatusAsync(Username, SetAccountStatusTo, PerformedByUsername, ClientKey, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UpdateUserAccessStatusAsync(ByVal Username As String, ByVal SetAccountStatusTo As Boolean, ByVal PerformedByUsername As String, ByVal ClientKey As String, ByVal userState As Object)
            If (Me.UpdateUserAccessStatusOperationCompleted Is Nothing) Then
                Me.UpdateUserAccessStatusOperationCompleted = AddressOf Me.OnUpdateUserAccessStatusOperationCompleted
            End If
            Me.InvokeAsync("UpdateUserAccessStatus", New Object() {Username, SetAccountStatusTo, PerformedByUsername, ClientKey}, Me.UpdateUserAccessStatusOperationCompleted, userState)
        End Sub
        
        Private Sub OnUpdateUserAccessStatusOperationCompleted(ByVal arg As Object)
            If (Not (Me.UpdateUserAccessStatusCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent UpdateUserAccessStatusCompleted(Me, New UpdateUserAccessStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ws.instawin.ph/UpdateGenericCodes", RequestNamespace:="http://ws.instawin.ph/", ResponseNamespace:="http://ws.instawin.ph/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function UpdateGenericCodes(ByVal GenericIdx As Integer, ByVal GenericName As String, ByVal GenericCode As String, ByVal GenericNumber As String, ByVal SortNumber As String, ByVal IsActive As Boolean, ByVal ClientKey As String) As Integer
            Dim results() As Object = Me.Invoke("UpdateGenericCodes", New Object() {GenericIdx, GenericName, GenericCode, GenericNumber, SortNumber, IsActive, ClientKey})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub UpdateGenericCodesAsync(ByVal GenericIdx As Integer, ByVal GenericName As String, ByVal GenericCode As String, ByVal GenericNumber As String, ByVal SortNumber As String, ByVal IsActive As Boolean, ByVal ClientKey As String)
            Me.UpdateGenericCodesAsync(GenericIdx, GenericName, GenericCode, GenericNumber, SortNumber, IsActive, ClientKey, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UpdateGenericCodesAsync(ByVal GenericIdx As Integer, ByVal GenericName As String, ByVal GenericCode As String, ByVal GenericNumber As String, ByVal SortNumber As String, ByVal IsActive As Boolean, ByVal ClientKey As String, ByVal userState As Object)
            If (Me.UpdateGenericCodesOperationCompleted Is Nothing) Then
                Me.UpdateGenericCodesOperationCompleted = AddressOf Me.OnUpdateGenericCodesOperationCompleted
            End If
            Me.InvokeAsync("UpdateGenericCodes", New Object() {GenericIdx, GenericName, GenericCode, GenericNumber, SortNumber, IsActive, ClientKey}, Me.UpdateGenericCodesOperationCompleted, userState)
        End Sub
        
        Private Sub OnUpdateGenericCodesOperationCompleted(ByVal arg As Object)
            If (Not (Me.UpdateGenericCodesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent UpdateGenericCodesCompleted(Me, New UpdateGenericCodesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ws.instawin.ph/UpdateUserAccessCode", RequestNamespace:="http://ws.instawin.ph/", ResponseNamespace:="http://ws.instawin.ph/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function UpdateUserAccessCode(ByVal Username As String, ByVal OldAccess As String, ByVal NewAccess As String, ByVal ClientKey As String) As Integer
            Dim results() As Object = Me.Invoke("UpdateUserAccessCode", New Object() {Username, OldAccess, NewAccess, ClientKey})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub UpdateUserAccessCodeAsync(ByVal Username As String, ByVal OldAccess As String, ByVal NewAccess As String, ByVal ClientKey As String)
            Me.UpdateUserAccessCodeAsync(Username, OldAccess, NewAccess, ClientKey, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UpdateUserAccessCodeAsync(ByVal Username As String, ByVal OldAccess As String, ByVal NewAccess As String, ByVal ClientKey As String, ByVal userState As Object)
            If (Me.UpdateUserAccessCodeOperationCompleted Is Nothing) Then
                Me.UpdateUserAccessCodeOperationCompleted = AddressOf Me.OnUpdateUserAccessCodeOperationCompleted
            End If
            Me.InvokeAsync("UpdateUserAccessCode", New Object() {Username, OldAccess, NewAccess, ClientKey}, Me.UpdateUserAccessCodeOperationCompleted, userState)
        End Sub
        
        Private Sub OnUpdateUserAccessCodeOperationCompleted(ByVal arg As Object)
            If (Not (Me.UpdateUserAccessCodeCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent UpdateUserAccessCodeCompleted(Me, New UpdateUserAccessCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ws.instawin.ph/UpdateUserForgotAccess", RequestNamespace:="http://ws.instawin.ph/", ResponseNamespace:="http://ws.instawin.ph/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function UpdateUserForgotAccess(ByVal Username As String, ByVal EmailAddress As String, ByVal IPAddress As String, ByVal ClientKey As String) As Integer
            Dim results() As Object = Me.Invoke("UpdateUserForgotAccess", New Object() {Username, EmailAddress, IPAddress, ClientKey})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub UpdateUserForgotAccessAsync(ByVal Username As String, ByVal EmailAddress As String, ByVal IPAddress As String, ByVal ClientKey As String)
            Me.UpdateUserForgotAccessAsync(Username, EmailAddress, IPAddress, ClientKey, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UpdateUserForgotAccessAsync(ByVal Username As String, ByVal EmailAddress As String, ByVal IPAddress As String, ByVal ClientKey As String, ByVal userState As Object)
            If (Me.UpdateUserForgotAccessOperationCompleted Is Nothing) Then
                Me.UpdateUserForgotAccessOperationCompleted = AddressOf Me.OnUpdateUserForgotAccessOperationCompleted
            End If
            Me.InvokeAsync("UpdateUserForgotAccess", New Object() {Username, EmailAddress, IPAddress, ClientKey}, Me.UpdateUserForgotAccessOperationCompleted, userState)
        End Sub
        
        Private Sub OnUpdateUserForgotAccessOperationCompleted(ByVal arg As Object)
            If (Not (Me.UpdateUserForgotAccessCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent UpdateUserForgotAccessCompleted(Me, New UpdateUserForgotAccessCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ws.instawin.ph/InsertUserModuleLevel", RequestNamespace:="http://ws.instawin.ph/", ResponseNamespace:="http://ws.instawin.ph/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InsertUserModuleLevel(ByVal ModuleName As String, ByVal LevelName As String, ByVal ClientKey As String) As Integer
            Dim results() As Object = Me.Invoke("InsertUserModuleLevel", New Object() {ModuleName, LevelName, ClientKey})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InsertUserModuleLevelAsync(ByVal ModuleName As String, ByVal LevelName As String, ByVal ClientKey As String)
            Me.InsertUserModuleLevelAsync(ModuleName, LevelName, ClientKey, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InsertUserModuleLevelAsync(ByVal ModuleName As String, ByVal LevelName As String, ByVal ClientKey As String, ByVal userState As Object)
            If (Me.InsertUserModuleLevelOperationCompleted Is Nothing) Then
                Me.InsertUserModuleLevelOperationCompleted = AddressOf Me.OnInsertUserModuleLevelOperationCompleted
            End If
            Me.InvokeAsync("InsertUserModuleLevel", New Object() {ModuleName, LevelName, ClientKey}, Me.InsertUserModuleLevelOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertUserModuleLevelOperationCompleted(ByVal arg As Object)
            If (Not (Me.InsertUserModuleLevelCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InsertUserModuleLevelCompleted(Me, New InsertUserModuleLevelCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ws.instawin.ph/GetUserIPAddressList", RequestNamespace:="http://ws.instawin.ph/", ResponseNamespace:="http://ws.instawin.ph/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetUserIPAddressList(ByVal Username As String, ByVal ClientKey As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetUserIPAddressList", New Object() {Username, ClientKey})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetUserIPAddressListAsync(ByVal Username As String, ByVal ClientKey As String)
            Me.GetUserIPAddressListAsync(Username, ClientKey, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetUserIPAddressListAsync(ByVal Username As String, ByVal ClientKey As String, ByVal userState As Object)
            If (Me.GetUserIPAddressListOperationCompleted Is Nothing) Then
                Me.GetUserIPAddressListOperationCompleted = AddressOf Me.OnGetUserIPAddressListOperationCompleted
            End If
            Me.InvokeAsync("GetUserIPAddressList", New Object() {Username, ClientKey}, Me.GetUserIPAddressListOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetUserIPAddressListOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetUserIPAddressListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetUserIPAddressListCompleted(Me, New GetUserIPAddressListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ws.instawin.ph/GetApplicationUsers", RequestNamespace:="http://ws.instawin.ph/", ResponseNamespace:="http://ws.instawin.ph/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetApplicationUsers(ByVal ClientKey As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetApplicationUsers", New Object() {ClientKey})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetApplicationUsersAsync(ByVal ClientKey As String)
            Me.GetApplicationUsersAsync(ClientKey, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetApplicationUsersAsync(ByVal ClientKey As String, ByVal userState As Object)
            If (Me.GetApplicationUsersOperationCompleted Is Nothing) Then
                Me.GetApplicationUsersOperationCompleted = AddressOf Me.OnGetApplicationUsersOperationCompleted
            End If
            Me.InvokeAsync("GetApplicationUsers", New Object() {ClientKey}, Me.GetApplicationUsersOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetApplicationUsersOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetApplicationUsersCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetApplicationUsersCompleted(Me, New GetApplicationUsersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ws.instawin.ph/GetUserModuleLevelList", RequestNamespace:="http://ws.instawin.ph/", ResponseNamespace:="http://ws.instawin.ph/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetUserModuleLevelList(ByVal Username As String, ByVal ClientKey As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetUserModuleLevelList", New Object() {Username, ClientKey})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetUserModuleLevelListAsync(ByVal Username As String, ByVal ClientKey As String)
            Me.GetUserModuleLevelListAsync(Username, ClientKey, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetUserModuleLevelListAsync(ByVal Username As String, ByVal ClientKey As String, ByVal userState As Object)
            If (Me.GetUserModuleLevelListOperationCompleted Is Nothing) Then
                Me.GetUserModuleLevelListOperationCompleted = AddressOf Me.OnGetUserModuleLevelListOperationCompleted
            End If
            Me.InvokeAsync("GetUserModuleLevelList", New Object() {Username, ClientKey}, Me.GetUserModuleLevelListOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetUserModuleLevelListOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetUserModuleLevelListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetUserModuleLevelListCompleted(Me, New GetUserModuleLevelListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ws.instawin.ph/GetUserPriviledgeList", RequestNamespace:="http://ws.instawin.ph/", ResponseNamespace:="http://ws.instawin.ph/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetUserPriviledgeList(ByVal Username As String, ByVal ClientKey As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetUserPriviledgeList", New Object() {Username, ClientKey})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetUserPriviledgeListAsync(ByVal Username As String, ByVal ClientKey As String)
            Me.GetUserPriviledgeListAsync(Username, ClientKey, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetUserPriviledgeListAsync(ByVal Username As String, ByVal ClientKey As String, ByVal userState As Object)
            If (Me.GetUserPriviledgeListOperationCompleted Is Nothing) Then
                Me.GetUserPriviledgeListOperationCompleted = AddressOf Me.OnGetUserPriviledgeListOperationCompleted
            End If
            Me.InvokeAsync("GetUserPriviledgeList", New Object() {Username, ClientKey}, Me.GetUserPriviledgeListOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetUserPriviledgeListOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetUserPriviledgeListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetUserPriviledgeListCompleted(Me, New GetUserPriviledgeListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ws.instawin.ph/GetBranchList", RequestNamespace:="http://ws.instawin.ph/", ResponseNamespace:="http://ws.instawin.ph/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetBranchList(ByVal IPAddress As String, ByVal ClientKey As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetBranchList", New Object() {IPAddress, ClientKey})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetBranchListAsync(ByVal IPAddress As String, ByVal ClientKey As String)
            Me.GetBranchListAsync(IPAddress, ClientKey, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetBranchListAsync(ByVal IPAddress As String, ByVal ClientKey As String, ByVal userState As Object)
            If (Me.GetBranchListOperationCompleted Is Nothing) Then
                Me.GetBranchListOperationCompleted = AddressOf Me.OnGetBranchListOperationCompleted
            End If
            Me.InvokeAsync("GetBranchList", New Object() {IPAddress, ClientKey}, Me.GetBranchListOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetBranchListOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetBranchListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetBranchListCompleted(Me, New GetBranchListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ws.instawin.ph/GetBranchParentChild", RequestNamespace:="http://ws.instawin.ph/", ResponseNamespace:="http://ws.instawin.ph/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetBranchParentChild(ByVal IsChild As Boolean, ByVal BranchIdx As Integer, ByVal ClientKey As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetBranchParentChild", New Object() {IsChild, BranchIdx, ClientKey})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetBranchParentChildAsync(ByVal IsChild As Boolean, ByVal BranchIdx As Integer, ByVal ClientKey As String)
            Me.GetBranchParentChildAsync(IsChild, BranchIdx, ClientKey, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetBranchParentChildAsync(ByVal IsChild As Boolean, ByVal BranchIdx As Integer, ByVal ClientKey As String, ByVal userState As Object)
            If (Me.GetBranchParentChildOperationCompleted Is Nothing) Then
                Me.GetBranchParentChildOperationCompleted = AddressOf Me.OnGetBranchParentChildOperationCompleted
            End If
            Me.InvokeAsync("GetBranchParentChild", New Object() {IsChild, BranchIdx, ClientKey}, Me.GetBranchParentChildOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetBranchParentChildOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetBranchParentChildCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetBranchParentChildCompleted(Me, New GetBranchParentChildCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ws.instawin.ph/GetExclusionList", RequestNamespace:="http://ws.instawin.ph/", ResponseNamespace:="http://ws.instawin.ph/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetExclusionList(ByVal IPAddress As String, ByVal ClientKey As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetExclusionList", New Object() {IPAddress, ClientKey})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetExclusionListAsync(ByVal IPAddress As String, ByVal ClientKey As String)
            Me.GetExclusionListAsync(IPAddress, ClientKey, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetExclusionListAsync(ByVal IPAddress As String, ByVal ClientKey As String, ByVal userState As Object)
            If (Me.GetExclusionListOperationCompleted Is Nothing) Then
                Me.GetExclusionListOperationCompleted = AddressOf Me.OnGetExclusionListOperationCompleted
            End If
            Me.InvokeAsync("GetExclusionList", New Object() {IPAddress, ClientKey}, Me.GetExclusionListOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetExclusionListOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetExclusionListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetExclusionListCompleted(Me, New GetExclusionListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ws.instawin.ph/GetBannedList", RequestNamespace:="http://ws.instawin.ph/", ResponseNamespace:="http://ws.instawin.ph/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetBannedList(ByVal IPAddress As String, ByVal ClientKey As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetBannedList", New Object() {IPAddress, ClientKey})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetBannedListAsync(ByVal IPAddress As String, ByVal ClientKey As String)
            Me.GetBannedListAsync(IPAddress, ClientKey, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetBannedListAsync(ByVal IPAddress As String, ByVal ClientKey As String, ByVal userState As Object)
            If (Me.GetBannedListOperationCompleted Is Nothing) Then
                Me.GetBannedListOperationCompleted = AddressOf Me.OnGetBannedListOperationCompleted
            End If
            Me.InvokeAsync("GetBannedList", New Object() {IPAddress, ClientKey}, Me.GetBannedListOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetBannedListOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetBannedListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetBannedListCompleted(Me, New GetBannedListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ws.instawin.ph/GetCountryList", RequestNamespace:="http://ws.instawin.ph/", ResponseNamespace:="http://ws.instawin.ph/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetCountryList(ByVal ClientKey As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetCountryList", New Object() {ClientKey})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetCountryListAsync(ByVal ClientKey As String)
            Me.GetCountryListAsync(ClientKey, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetCountryListAsync(ByVal ClientKey As String, ByVal userState As Object)
            If (Me.GetCountryListOperationCompleted Is Nothing) Then
                Me.GetCountryListOperationCompleted = AddressOf Me.OnGetCountryListOperationCompleted
            End If
            Me.InvokeAsync("GetCountryList", New Object() {ClientKey}, Me.GetCountryListOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetCountryListOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetCountryListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetCountryListCompleted(Me, New GetCountryListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ws.instawin.ph/GetCountryTelephoneCodes", RequestNamespace:="http://ws.instawin.ph/", ResponseNamespace:="http://ws.instawin.ph/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetCountryTelephoneCodes(ByVal ClientKey As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetCountryTelephoneCodes", New Object() {ClientKey})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetCountryTelephoneCodesAsync(ByVal ClientKey As String)
            Me.GetCountryTelephoneCodesAsync(ClientKey, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetCountryTelephoneCodesAsync(ByVal ClientKey As String, ByVal userState As Object)
            If (Me.GetCountryTelephoneCodesOperationCompleted Is Nothing) Then
                Me.GetCountryTelephoneCodesOperationCompleted = AddressOf Me.OnGetCountryTelephoneCodesOperationCompleted
            End If
            Me.InvokeAsync("GetCountryTelephoneCodes", New Object() {ClientKey}, Me.GetCountryTelephoneCodesOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetCountryTelephoneCodesOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetCountryTelephoneCodesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetCountryTelephoneCodesCompleted(Me, New GetCountryTelephoneCodesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ws.instawin.ph/GetCountryNationalityList", RequestNamespace:="http://ws.instawin.ph/", ResponseNamespace:="http://ws.instawin.ph/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetCountryNationalityList(ByVal IPAddress As String, ByVal ClientKey As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetCountryNationalityList", New Object() {IPAddress, ClientKey})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetCountryNationalityListAsync(ByVal IPAddress As String, ByVal ClientKey As String)
            Me.GetCountryNationalityListAsync(IPAddress, ClientKey, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetCountryNationalityListAsync(ByVal IPAddress As String, ByVal ClientKey As String, ByVal userState As Object)
            If (Me.GetCountryNationalityListOperationCompleted Is Nothing) Then
                Me.GetCountryNationalityListOperationCompleted = AddressOf Me.OnGetCountryNationalityListOperationCompleted
            End If
            Me.InvokeAsync("GetCountryNationalityList", New Object() {IPAddress, ClientKey}, Me.GetCountryNationalityListOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetCountryNationalityListOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetCountryNationalityListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetCountryNationalityListCompleted(Me, New GetCountryNationalityListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ws.instawin.ph/GetBillingViewedGuestPerBranch", RequestNamespace:="http://ws.instawin.ph/", ResponseNamespace:="http://ws.instawin.ph/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetBillingViewedGuestPerBranch(ByVal BranchIdx As Integer, ByVal DateFrom As Date, ByVal DateTo As Date, ByVal ClientKey As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetBillingViewedGuestPerBranch", New Object() {BranchIdx, DateFrom, DateTo, ClientKey})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetBillingViewedGuestPerBranchAsync(ByVal BranchIdx As Integer, ByVal DateFrom As Date, ByVal DateTo As Date, ByVal ClientKey As String)
            Me.GetBillingViewedGuestPerBranchAsync(BranchIdx, DateFrom, DateTo, ClientKey, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetBillingViewedGuestPerBranchAsync(ByVal BranchIdx As Integer, ByVal DateFrom As Date, ByVal DateTo As Date, ByVal ClientKey As String, ByVal userState As Object)
            If (Me.GetBillingViewedGuestPerBranchOperationCompleted Is Nothing) Then
                Me.GetBillingViewedGuestPerBranchOperationCompleted = AddressOf Me.OnGetBillingViewedGuestPerBranchOperationCompleted
            End If
            Me.InvokeAsync("GetBillingViewedGuestPerBranch", New Object() {BranchIdx, DateFrom, DateTo, ClientKey}, Me.GetBillingViewedGuestPerBranchOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetBillingViewedGuestPerBranchOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetBillingViewedGuestPerBranchCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetBillingViewedGuestPerBranchCompleted(Me, New GetBillingViewedGuestPerBranchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ws.instawin.ph/GetBillingViewedGuestPerUser", RequestNamespace:="http://ws.instawin.ph/", ResponseNamespace:="http://ws.instawin.ph/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetBillingViewedGuestPerUser(ByVal UserIdx As Integer, ByVal DateFrom As Date, ByVal DateTo As Date, ByVal ClientKey As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetBillingViewedGuestPerUser", New Object() {UserIdx, DateFrom, DateTo, ClientKey})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetBillingViewedGuestPerUserAsync(ByVal UserIdx As Integer, ByVal DateFrom As Date, ByVal DateTo As Date, ByVal ClientKey As String)
            Me.GetBillingViewedGuestPerUserAsync(UserIdx, DateFrom, DateTo, ClientKey, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetBillingViewedGuestPerUserAsync(ByVal UserIdx As Integer, ByVal DateFrom As Date, ByVal DateTo As Date, ByVal ClientKey As String, ByVal userState As Object)
            If (Me.GetBillingViewedGuestPerUserOperationCompleted Is Nothing) Then
                Me.GetBillingViewedGuestPerUserOperationCompleted = AddressOf Me.OnGetBillingViewedGuestPerUserOperationCompleted
            End If
            Me.InvokeAsync("GetBillingViewedGuestPerUser", New Object() {UserIdx, DateFrom, DateTo, ClientKey}, Me.GetBillingViewedGuestPerUserOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetBillingViewedGuestPerUserOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetBillingViewedGuestPerUserCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetBillingViewedGuestPerUserCompleted(Me, New GetBillingViewedGuestPerUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ws.instawin.ph/GetBillingRates", RequestNamespace:="http://ws.instawin.ph/", ResponseNamespace:="http://ws.instawin.ph/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetBillingRates(ByVal ClientKey As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetBillingRates", New Object() {ClientKey})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetBillingRatesAsync(ByVal ClientKey As String)
            Me.GetBillingRatesAsync(ClientKey, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetBillingRatesAsync(ByVal ClientKey As String, ByVal userState As Object)
            If (Me.GetBillingRatesOperationCompleted Is Nothing) Then
                Me.GetBillingRatesOperationCompleted = AddressOf Me.OnGetBillingRatesOperationCompleted
            End If
            Me.InvokeAsync("GetBillingRates", New Object() {ClientKey}, Me.GetBillingRatesOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetBillingRatesOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetBillingRatesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetBillingRatesCompleted(Me, New GetBillingRatesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ws.instawin.ph/InsertComBillingRates", RequestNamespace:="http://ws.instawin.ph/", ResponseNamespace:="http://ws.instawin.ph/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InsertComBillingRates(ByVal RateCode As String, ByVal AccessRate As Double, ByVal CreatedByUserID As String, ByVal ClientKey As String) As Integer
            Dim results() As Object = Me.Invoke("InsertComBillingRates", New Object() {RateCode, AccessRate, CreatedByUserID, ClientKey})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InsertComBillingRatesAsync(ByVal RateCode As String, ByVal AccessRate As Double, ByVal CreatedByUserID As String, ByVal ClientKey As String)
            Me.InsertComBillingRatesAsync(RateCode, AccessRate, CreatedByUserID, ClientKey, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InsertComBillingRatesAsync(ByVal RateCode As String, ByVal AccessRate As Double, ByVal CreatedByUserID As String, ByVal ClientKey As String, ByVal userState As Object)
            If (Me.InsertComBillingRatesOperationCompleted Is Nothing) Then
                Me.InsertComBillingRatesOperationCompleted = AddressOf Me.OnInsertComBillingRatesOperationCompleted
            End If
            Me.InvokeAsync("InsertComBillingRates", New Object() {RateCode, AccessRate, CreatedByUserID, ClientKey}, Me.InsertComBillingRatesOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertComBillingRatesOperationCompleted(ByVal arg As Object)
            If (Not (Me.InsertComBillingRatesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InsertComBillingRatesCompleted(Me, New InsertComBillingRatesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ws.instawin.ph/GetApplicationNotices", RequestNamespace:="http://ws.instawin.ph/", ResponseNamespace:="http://ws.instawin.ph/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetApplicationNotices(ByVal NoticeType As Integer, ByVal ClientKey As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetApplicationNotices", New Object() {NoticeType, ClientKey})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetApplicationNoticesAsync(ByVal NoticeType As Integer, ByVal ClientKey As String)
            Me.GetApplicationNoticesAsync(NoticeType, ClientKey, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetApplicationNoticesAsync(ByVal NoticeType As Integer, ByVal ClientKey As String, ByVal userState As Object)
            If (Me.GetApplicationNoticesOperationCompleted Is Nothing) Then
                Me.GetApplicationNoticesOperationCompleted = AddressOf Me.OnGetApplicationNoticesOperationCompleted
            End If
            Me.InvokeAsync("GetApplicationNotices", New Object() {NoticeType, ClientKey}, Me.GetApplicationNoticesOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetApplicationNoticesOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetApplicationNoticesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetApplicationNoticesCompleted(Me, New GetApplicationNoticesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ws.instawin.ph/InsertComApplicationNotice", RequestNamespace:="http://ws.instawin.ph/", ResponseNamespace:="http://ws.instawin.ph/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InsertComApplicationNotice(ByVal NoticeType As String, ByVal ApplicationNotice As String, ByVal DateValidity As Date, ByVal CreatedByUserID As String, ByVal ClientKey As String) As Integer
            Dim results() As Object = Me.Invoke("InsertComApplicationNotice", New Object() {NoticeType, ApplicationNotice, DateValidity, CreatedByUserID, ClientKey})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InsertComApplicationNoticeAsync(ByVal NoticeType As String, ByVal ApplicationNotice As String, ByVal DateValidity As Date, ByVal CreatedByUserID As String, ByVal ClientKey As String)
            Me.InsertComApplicationNoticeAsync(NoticeType, ApplicationNotice, DateValidity, CreatedByUserID, ClientKey, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InsertComApplicationNoticeAsync(ByVal NoticeType As String, ByVal ApplicationNotice As String, ByVal DateValidity As Date, ByVal CreatedByUserID As String, ByVal ClientKey As String, ByVal userState As Object)
            If (Me.InsertComApplicationNoticeOperationCompleted Is Nothing) Then
                Me.InsertComApplicationNoticeOperationCompleted = AddressOf Me.OnInsertComApplicationNoticeOperationCompleted
            End If
            Me.InvokeAsync("InsertComApplicationNotice", New Object() {NoticeType, ApplicationNotice, DateValidity, CreatedByUserID, ClientKey}, Me.InsertComApplicationNoticeOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertComApplicationNoticeOperationCompleted(ByVal arg As Object)
            If (Not (Me.InsertComApplicationNoticeCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InsertComApplicationNoticeCompleted(Me, New InsertComApplicationNoticeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ws.instawin.ph/TOOL_ApplicationMailer", RequestNamespace:="http://ws.instawin.ph/", ResponseNamespace:="http://ws.instawin.ph/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function TOOL_ApplicationMailer(ByVal GuestID As String, ByVal EmailCode As String, ByVal CreatedByUserID As String, ByVal ClientKey As String) As Integer
            Dim results() As Object = Me.Invoke("TOOL_ApplicationMailer", New Object() {GuestID, EmailCode, CreatedByUserID, ClientKey})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub TOOL_ApplicationMailerAsync(ByVal GuestID As String, ByVal EmailCode As String, ByVal CreatedByUserID As String, ByVal ClientKey As String)
            Me.TOOL_ApplicationMailerAsync(GuestID, EmailCode, CreatedByUserID, ClientKey, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub TOOL_ApplicationMailerAsync(ByVal GuestID As String, ByVal EmailCode As String, ByVal CreatedByUserID As String, ByVal ClientKey As String, ByVal userState As Object)
            If (Me.TOOL_ApplicationMailerOperationCompleted Is Nothing) Then
                Me.TOOL_ApplicationMailerOperationCompleted = AddressOf Me.OnTOOL_ApplicationMailerOperationCompleted
            End If
            Me.InvokeAsync("TOOL_ApplicationMailer", New Object() {GuestID, EmailCode, CreatedByUserID, ClientKey}, Me.TOOL_ApplicationMailerOperationCompleted, userState)
        End Sub
        
        Private Sub OnTOOL_ApplicationMailerOperationCompleted(ByVal arg As Object)
            If (Not (Me.TOOL_ApplicationMailerCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent TOOL_ApplicationMailerCompleted(Me, New TOOL_ApplicationMailerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ws.instawin.ph/GetBranchList_BCF", RequestNamespace:="http://ws.instawin.ph/", ResponseNamespace:="http://ws.instawin.ph/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetBranchList_BCF(ByVal Login As String, ByVal ClientKey As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetBranchList_BCF", New Object() {Login, ClientKey})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetBranchList_BCFAsync(ByVal Login As String, ByVal ClientKey As String)
            Me.GetBranchList_BCFAsync(Login, ClientKey, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetBranchList_BCFAsync(ByVal Login As String, ByVal ClientKey As String, ByVal userState As Object)
            If (Me.GetBranchList_BCFOperationCompleted Is Nothing) Then
                Me.GetBranchList_BCFOperationCompleted = AddressOf Me.OnGetBranchList_BCFOperationCompleted
            End If
            Me.InvokeAsync("GetBranchList_BCF", New Object() {Login, ClientKey}, Me.GetBranchList_BCFOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetBranchList_BCFOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetBranchList_BCFCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetBranchList_BCFCompleted(Me, New GetBranchList_BCFCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ws.instawin.ph/GetTerminalList_By_Branch", RequestNamespace:="http://ws.instawin.ph/", ResponseNamespace:="http://ws.instawin.ph/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetTerminalList_By_Branch(ByVal BranchIdx As Integer, ByVal ClientKey As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetTerminalList_By_Branch", New Object() {BranchIdx, ClientKey})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetTerminalList_By_BranchAsync(ByVal BranchIdx As Integer, ByVal ClientKey As String)
            Me.GetTerminalList_By_BranchAsync(BranchIdx, ClientKey, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetTerminalList_By_BranchAsync(ByVal BranchIdx As Integer, ByVal ClientKey As String, ByVal userState As Object)
            If (Me.GetTerminalList_By_BranchOperationCompleted Is Nothing) Then
                Me.GetTerminalList_By_BranchOperationCompleted = AddressOf Me.OnGetTerminalList_By_BranchOperationCompleted
            End If
            Me.InvokeAsync("GetTerminalList_By_Branch", New Object() {BranchIdx, ClientKey}, Me.GetTerminalList_By_BranchOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetTerminalList_By_BranchOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetTerminalList_By_BranchCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetTerminalList_By_BranchCompleted(Me, New GetTerminalList_By_BranchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ws.instawin.ph/GetTerminalList_Detail", RequestNamespace:="http://ws.instawin.ph/", ResponseNamespace:="http://ws.instawin.ph/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetTerminalList_Detail(ByVal TerminalIdx As Integer, ByVal ClientKey As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetTerminalList_Detail", New Object() {TerminalIdx, ClientKey})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetTerminalList_DetailAsync(ByVal TerminalIdx As Integer, ByVal ClientKey As String)
            Me.GetTerminalList_DetailAsync(TerminalIdx, ClientKey, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetTerminalList_DetailAsync(ByVal TerminalIdx As Integer, ByVal ClientKey As String, ByVal userState As Object)
            If (Me.GetTerminalList_DetailOperationCompleted Is Nothing) Then
                Me.GetTerminalList_DetailOperationCompleted = AddressOf Me.OnGetTerminalList_DetailOperationCompleted
            End If
            Me.InvokeAsync("GetTerminalList_Detail", New Object() {TerminalIdx, ClientKey}, Me.GetTerminalList_DetailOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetTerminalList_DetailOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetTerminalList_DetailCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetTerminalList_DetailCompleted(Me, New GetTerminalList_DetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ws.instawin.ph/UpdateApplicationUsersStatus", RequestNamespace:="http://ws.instawin.ph/", ResponseNamespace:="http://ws.instawin.ph/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function UpdateApplicationUsersStatus(ByVal UserIdx As Integer, ByVal Trigger As String, ByVal ClientKey As String) As Integer
            Dim results() As Object = Me.Invoke("UpdateApplicationUsersStatus", New Object() {UserIdx, Trigger, ClientKey})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub UpdateApplicationUsersStatusAsync(ByVal UserIdx As Integer, ByVal Trigger As String, ByVal ClientKey As String)
            Me.UpdateApplicationUsersStatusAsync(UserIdx, Trigger, ClientKey, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UpdateApplicationUsersStatusAsync(ByVal UserIdx As Integer, ByVal Trigger As String, ByVal ClientKey As String, ByVal userState As Object)
            If (Me.UpdateApplicationUsersStatusOperationCompleted Is Nothing) Then
                Me.UpdateApplicationUsersStatusOperationCompleted = AddressOf Me.OnUpdateApplicationUsersStatusOperationCompleted
            End If
            Me.InvokeAsync("UpdateApplicationUsersStatus", New Object() {UserIdx, Trigger, ClientKey}, Me.UpdateApplicationUsersStatusOperationCompleted, userState)
        End Sub
        
        Private Sub OnUpdateApplicationUsersStatusOperationCompleted(ByVal arg As Object)
            If (Not (Me.UpdateApplicationUsersStatusCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent UpdateApplicationUsersStatusCompleted(Me, New UpdateApplicationUsersStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ws.instawin.ph/UpdateBranchProfileStatus", RequestNamespace:="http://ws.instawin.ph/", ResponseNamespace:="http://ws.instawin.ph/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function UpdateBranchProfileStatus(ByVal BranchIdx As Integer, ByVal Trigger As String, ByVal ClientKey As String) As Integer
            Dim results() As Object = Me.Invoke("UpdateBranchProfileStatus", New Object() {BranchIdx, Trigger, ClientKey})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub UpdateBranchProfileStatusAsync(ByVal BranchIdx As Integer, ByVal Trigger As String, ByVal ClientKey As String)
            Me.UpdateBranchProfileStatusAsync(BranchIdx, Trigger, ClientKey, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UpdateBranchProfileStatusAsync(ByVal BranchIdx As Integer, ByVal Trigger As String, ByVal ClientKey As String, ByVal userState As Object)
            If (Me.UpdateBranchProfileStatusOperationCompleted Is Nothing) Then
                Me.UpdateBranchProfileStatusOperationCompleted = AddressOf Me.OnUpdateBranchProfileStatusOperationCompleted
            End If
            Me.InvokeAsync("UpdateBranchProfileStatus", New Object() {BranchIdx, Trigger, ClientKey}, Me.UpdateBranchProfileStatusOperationCompleted, userState)
        End Sub
        
        Private Sub OnUpdateBranchProfileStatusOperationCompleted(ByVal arg As Object)
            If (Not (Me.UpdateBranchProfileStatusCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent UpdateBranchProfileStatusCompleted(Me, New UpdateBranchProfileStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ws.instawin.ph/UpdateBranchTerminalsStatus", RequestNamespace:="http://ws.instawin.ph/", ResponseNamespace:="http://ws.instawin.ph/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function UpdateBranchTerminalsStatus(ByVal BranchTerminalIdx As Integer, ByVal IsActive As Boolean, ByVal CreatedByUserID As String, ByVal ClientKey As String) As Integer
            Dim results() As Object = Me.Invoke("UpdateBranchTerminalsStatus", New Object() {BranchTerminalIdx, IsActive, CreatedByUserID, ClientKey})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub UpdateBranchTerminalsStatusAsync(ByVal BranchTerminalIdx As Integer, ByVal IsActive As Boolean, ByVal CreatedByUserID As String, ByVal ClientKey As String)
            Me.UpdateBranchTerminalsStatusAsync(BranchTerminalIdx, IsActive, CreatedByUserID, ClientKey, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UpdateBranchTerminalsStatusAsync(ByVal BranchTerminalIdx As Integer, ByVal IsActive As Boolean, ByVal CreatedByUserID As String, ByVal ClientKey As String, ByVal userState As Object)
            If (Me.UpdateBranchTerminalsStatusOperationCompleted Is Nothing) Then
                Me.UpdateBranchTerminalsStatusOperationCompleted = AddressOf Me.OnUpdateBranchTerminalsStatusOperationCompleted
            End If
            Me.InvokeAsync("UpdateBranchTerminalsStatus", New Object() {BranchTerminalIdx, IsActive, CreatedByUserID, ClientKey}, Me.UpdateBranchTerminalsStatusOperationCompleted, userState)
        End Sub
        
        Private Sub OnUpdateBranchTerminalsStatusOperationCompleted(ByVal arg As Object)
            If (Not (Me.UpdateBranchTerminalsStatusCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent UpdateBranchTerminalsStatusCompleted(Me, New UpdateBranchTerminalsStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ws.instawin.ph/InsertBranchTerminals", RequestNamespace:="http://ws.instawin.ph/", ResponseNamespace:="http://ws.instawin.ph/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InsertBranchTerminals(ByVal Login As String, ByVal ExtID As String, ByVal GroupIdx As Integer, ByVal PTCode As String, ByVal PTCashier As String, ByVal StartNum As Integer, ByVal EndNum As Integer, ByVal ClientKey As String) As Integer
            Dim results() As Object = Me.Invoke("InsertBranchTerminals", New Object() {Login, ExtID, GroupIdx, PTCode, PTCashier, StartNum, EndNum, ClientKey})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InsertBranchTerminalsAsync(ByVal Login As String, ByVal ExtID As String, ByVal GroupIdx As Integer, ByVal PTCode As String, ByVal PTCashier As String, ByVal StartNum As Integer, ByVal EndNum As Integer, ByVal ClientKey As String)
            Me.InsertBranchTerminalsAsync(Login, ExtID, GroupIdx, PTCode, PTCashier, StartNum, EndNum, ClientKey, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InsertBranchTerminalsAsync(ByVal Login As String, ByVal ExtID As String, ByVal GroupIdx As Integer, ByVal PTCode As String, ByVal PTCashier As String, ByVal StartNum As Integer, ByVal EndNum As Integer, ByVal ClientKey As String, ByVal userState As Object)
            If (Me.InsertBranchTerminalsOperationCompleted Is Nothing) Then
                Me.InsertBranchTerminalsOperationCompleted = AddressOf Me.OnInsertBranchTerminalsOperationCompleted
            End If
            Me.InvokeAsync("InsertBranchTerminals", New Object() {Login, ExtID, GroupIdx, PTCode, PTCashier, StartNum, EndNum, ClientKey}, Me.InsertBranchTerminalsOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertBranchTerminalsOperationCompleted(ByVal arg As Object)
            If (Not (Me.InsertBranchTerminalsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InsertBranchTerminalsCompleted(Me, New InsertBranchTerminalsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ws.instawin.ph/GetBranchList_BVL", RequestNamespace:="http://ws.instawin.ph/", ResponseNamespace:="http://ws.instawin.ph/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetBranchList_BVL(ByVal UserIdx As Integer, ByVal ClientKey As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetBranchList_BVL", New Object() {UserIdx, ClientKey})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetBranchList_BVLAsync(ByVal UserIdx As Integer, ByVal ClientKey As String)
            Me.GetBranchList_BVLAsync(UserIdx, ClientKey, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetBranchList_BVLAsync(ByVal UserIdx As Integer, ByVal ClientKey As String, ByVal userState As Object)
            If (Me.GetBranchList_BVLOperationCompleted Is Nothing) Then
                Me.GetBranchList_BVLOperationCompleted = AddressOf Me.OnGetBranchList_BVLOperationCompleted
            End If
            Me.InvokeAsync("GetBranchList_BVL", New Object() {UserIdx, ClientKey}, Me.GetBranchList_BVLOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetBranchList_BVLOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetBranchList_BVLCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetBranchList_BVLCompleted(Me, New GetBranchList_BVLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ws.instawin.ph/GetRPTLoginHistory", RequestNamespace:="http://ws.instawin.ph/", ResponseNamespace:="http://ws.instawin.ph/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetRPTLoginHistory(ByVal Trigger As Integer, ByVal Type As Integer, ByVal IPAddress As String, ByVal BranchName As String, ByVal Username As String, ByVal ClientKey As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetRPTLoginHistory", New Object() {Trigger, Type, IPAddress, BranchName, Username, ClientKey})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetRPTLoginHistoryAsync(ByVal Trigger As Integer, ByVal Type As Integer, ByVal IPAddress As String, ByVal BranchName As String, ByVal Username As String, ByVal ClientKey As String)
            Me.GetRPTLoginHistoryAsync(Trigger, Type, IPAddress, BranchName, Username, ClientKey, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetRPTLoginHistoryAsync(ByVal Trigger As Integer, ByVal Type As Integer, ByVal IPAddress As String, ByVal BranchName As String, ByVal Username As String, ByVal ClientKey As String, ByVal userState As Object)
            If (Me.GetRPTLoginHistoryOperationCompleted Is Nothing) Then
                Me.GetRPTLoginHistoryOperationCompleted = AddressOf Me.OnGetRPTLoginHistoryOperationCompleted
            End If
            Me.InvokeAsync("GetRPTLoginHistory", New Object() {Trigger, Type, IPAddress, BranchName, Username, ClientKey}, Me.GetRPTLoginHistoryOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetRPTLoginHistoryOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetRPTLoginHistoryCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetRPTLoginHistoryCompleted(Me, New GetRPTLoginHistoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub
        
        Private Function IsLocalFileSystemWebService(ByVal url As String) As Boolean
            If ((url Is Nothing)  _
                        OrElse (url Is String.Empty)) Then
                Return false
            End If
            Dim wsUri As System.Uri = New System.Uri(url)
            If ((wsUri.Port >= 1024)  _
                        AndAlso (String.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) = 0)) Then
                Return true
            End If
            Return false
        End Function
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetServerDateTimeCompletedEventHandler(ByVal sender As Object, ByVal e As GetServerDateTimeCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetServerDateTimeCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Date
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Date)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetRemoteIPAddressCompletedEventHandler(ByVal sender As Object, ByVal e As GetRemoteIPAddressCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetRemoteIPAddressCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub TOOL_GenerateMD5StringCompletedEventHandler(ByVal sender As Object, ByVal e As TOOL_GenerateMD5StringCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class TOOL_GenerateMD5StringCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub TOOL_3DESEncryptStringCompletedEventHandler(ByVal sender As Object, ByVal e As TOOL_3DESEncryptStringCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class TOOL_3DESEncryptStringCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub TOOL_3DESDecryptStringCompletedEventHandler(ByVal sender As Object, ByVal e As TOOL_3DESDecryptStringCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class TOOL_3DESDecryptStringCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub InsertComBannedCriteriaCompletedEventHandler(ByVal sender As Object, ByVal e As InsertComBannedCriteriaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InsertComBannedCriteriaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub InsertCountryInfoCompletedEventHandler(ByVal sender As Object, ByVal e As InsertCountryInfoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InsertCountryInfoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub InsertComExclusionOrdersCompletedEventHandler(ByVal sender As Object, ByVal e As InsertComExclusionOrdersCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InsertComExclusionOrdersCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub InsertComGenericCodesCompletedEventHandler(ByVal sender As Object, ByVal e As InsertComGenericCodesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InsertComGenericCodesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub InsertComGenericTypesCompletedEventHandler(ByVal sender As Object, ByVal e As InsertComGenericTypesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InsertComGenericTypesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub InsertComUserAccessListCompletedEventHandler(ByVal sender As Object, ByVal e As InsertComUserAccessListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InsertComUserAccessListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub InsertComUserIPAddressCompletedEventHandler(ByVal sender As Object, ByVal e As InsertComUserIPAddressCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InsertComUserIPAddressCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub InsertComBranchProfileCompletedEventHandler(ByVal sender As Object, ByVal e As InsertComBranchProfileCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InsertComBranchProfileCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub InsertComEmployeeInformationCompletedEventHandler(ByVal sender As Object, ByVal e As InsertComEmployeeInformationCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InsertComEmployeeInformationCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub UpdateComEmployeeInformationCompletedEventHandler(ByVal sender As Object, ByVal e As UpdateComEmployeeInformationCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class UpdateComEmployeeInformationCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub UpdateUserAccessStatusCompletedEventHandler(ByVal sender As Object, ByVal e As UpdateUserAccessStatusCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class UpdateUserAccessStatusCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub UpdateGenericCodesCompletedEventHandler(ByVal sender As Object, ByVal e As UpdateGenericCodesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class UpdateGenericCodesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub UpdateUserAccessCodeCompletedEventHandler(ByVal sender As Object, ByVal e As UpdateUserAccessCodeCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class UpdateUserAccessCodeCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub UpdateUserForgotAccessCompletedEventHandler(ByVal sender As Object, ByVal e As UpdateUserForgotAccessCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class UpdateUserForgotAccessCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub InsertUserModuleLevelCompletedEventHandler(ByVal sender As Object, ByVal e As InsertUserModuleLevelCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InsertUserModuleLevelCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetUserIPAddressListCompletedEventHandler(ByVal sender As Object, ByVal e As GetUserIPAddressListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetUserIPAddressListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetApplicationUsersCompletedEventHandler(ByVal sender As Object, ByVal e As GetApplicationUsersCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetApplicationUsersCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetUserModuleLevelListCompletedEventHandler(ByVal sender As Object, ByVal e As GetUserModuleLevelListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetUserModuleLevelListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetUserPriviledgeListCompletedEventHandler(ByVal sender As Object, ByVal e As GetUserPriviledgeListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetUserPriviledgeListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetBranchListCompletedEventHandler(ByVal sender As Object, ByVal e As GetBranchListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetBranchListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetBranchParentChildCompletedEventHandler(ByVal sender As Object, ByVal e As GetBranchParentChildCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetBranchParentChildCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetExclusionListCompletedEventHandler(ByVal sender As Object, ByVal e As GetExclusionListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetExclusionListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetBannedListCompletedEventHandler(ByVal sender As Object, ByVal e As GetBannedListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetBannedListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetCountryListCompletedEventHandler(ByVal sender As Object, ByVal e As GetCountryListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetCountryListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetCountryTelephoneCodesCompletedEventHandler(ByVal sender As Object, ByVal e As GetCountryTelephoneCodesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetCountryTelephoneCodesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetCountryNationalityListCompletedEventHandler(ByVal sender As Object, ByVal e As GetCountryNationalityListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetCountryNationalityListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetBillingViewedGuestPerBranchCompletedEventHandler(ByVal sender As Object, ByVal e As GetBillingViewedGuestPerBranchCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetBillingViewedGuestPerBranchCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetBillingViewedGuestPerUserCompletedEventHandler(ByVal sender As Object, ByVal e As GetBillingViewedGuestPerUserCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetBillingViewedGuestPerUserCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetBillingRatesCompletedEventHandler(ByVal sender As Object, ByVal e As GetBillingRatesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetBillingRatesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub InsertComBillingRatesCompletedEventHandler(ByVal sender As Object, ByVal e As InsertComBillingRatesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InsertComBillingRatesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetApplicationNoticesCompletedEventHandler(ByVal sender As Object, ByVal e As GetApplicationNoticesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetApplicationNoticesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub InsertComApplicationNoticeCompletedEventHandler(ByVal sender As Object, ByVal e As InsertComApplicationNoticeCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InsertComApplicationNoticeCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub TOOL_ApplicationMailerCompletedEventHandler(ByVal sender As Object, ByVal e As TOOL_ApplicationMailerCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class TOOL_ApplicationMailerCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetBranchList_BCFCompletedEventHandler(ByVal sender As Object, ByVal e As GetBranchList_BCFCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetBranchList_BCFCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetTerminalList_By_BranchCompletedEventHandler(ByVal sender As Object, ByVal e As GetTerminalList_By_BranchCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetTerminalList_By_BranchCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetTerminalList_DetailCompletedEventHandler(ByVal sender As Object, ByVal e As GetTerminalList_DetailCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetTerminalList_DetailCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub UpdateApplicationUsersStatusCompletedEventHandler(ByVal sender As Object, ByVal e As UpdateApplicationUsersStatusCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class UpdateApplicationUsersStatusCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub UpdateBranchProfileStatusCompletedEventHandler(ByVal sender As Object, ByVal e As UpdateBranchProfileStatusCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class UpdateBranchProfileStatusCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub UpdateBranchTerminalsStatusCompletedEventHandler(ByVal sender As Object, ByVal e As UpdateBranchTerminalsStatusCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class UpdateBranchTerminalsStatusCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub InsertBranchTerminalsCompletedEventHandler(ByVal sender As Object, ByVal e As InsertBranchTerminalsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InsertBranchTerminalsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetBranchList_BVLCompletedEventHandler(ByVal sender As Object, ByVal e As GetBranchList_BVLCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetBranchList_BVLCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetRPTLoginHistoryCompletedEventHandler(ByVal sender As Object, ByVal e As GetRPTLoginHistoryCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetRPTLoginHistoryCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
End Namespace
